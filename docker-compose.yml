version: "3"
services:
  db:
    image: postgres
    restart: always
    volumes:
      - ./src/db/data/db:/var/lib/postgres/data
    ports:
      - 5432:5432

    environment:
      - POSTGRES_DB=colabDB
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root

    healthcheck:
      test: ["CMD", "pg_isready", "-U", "root", "-d", "colabDB"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

  redis:
    image: redis/redis-stack:latest
    restart: always
    ports:
      - 6379:6379
      - 8001:8001

    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  # nodejs server

  app:
    build: .
    restart: always
    ports:
      - 4000:4000
    environment:
      # REDIS_HOST: redis
      # REDIS_PORT: 6379

      POSTGRES_USER: root
      POSTGRES_PASS: root
      POSTGRES_PORT: 5432
      POSTGRES_DB: colabDB
      POSTGRES_HOST: db
      SECRET_KEY: 5971c06e6317b850975c4621c12a1ca7a54de75fba800691dc8ca3754bb158d8
      IV: 0f5c8ef450a0499da7a304624e96ab06
      SALT: 12
      ACCESS_TOKEN_SECRET: 067e7504c6f659fdd30063542f4e87d2
      ACCESS_TOKEN_EXPIRY: 7d
      REDIS_PORT: 6379
      REDIS_HOST: redis

    depends_on:
      - redis
      - db

    command: >
      bash -c "
        until echo > /dev/tcp/redis/6379; do
          echo 'Waiting for Redis to be healthy...';
          sleep 2;
        done;
        until echo > /dev/tcp/db/5432; do
          echo 'Waiting for PostgreSQL to be healthy...';
          sleep 2;
        done;
        echo 'Both Redis and PostgreSQL are ready. Starting Node.js app...';
        node dist/index.js
      "
